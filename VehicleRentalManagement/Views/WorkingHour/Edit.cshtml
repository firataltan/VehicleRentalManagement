@model VehicleRentalManagement.Models.WorkingHour
@{
    ViewBag.Title = "Çalışma Süresi Düzenle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .form-container {
        max-width: 900px;
        margin: 0 auto;
    }

    .form-card {
        background: white;
        border-radius: 20px;
        padding: 2.5rem;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
    }

    .form-header {
        text-align: center;
        margin-bottom: 2rem;
        padding-bottom: 1.5rem;
        border-bottom: 2px solid #e2e8f0;
    }

        .form-header h2 {
            font-weight: 800;
            background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            margin-bottom: 0.5rem;
        }

    .form-icon {
        width: 70px;
        height: 70px;
        background: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
        border-radius: 16px;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        color: white;
        margin: 0 auto 1rem;
        box-shadow: 0 4px 15px rgba(250, 112, 154, 0.3);
    }

    .input-group-icon {
        position: relative;
    }

        .input-group-icon .form-control,
        .input-group-icon .form-select {
            padding-left: 3rem;
        }

        .input-group-icon i {
            position: absolute;
            left: 1rem;
            top: 50%;
            transform: translateY(-50%);
            color: #fa709a;
            z-index: 10;
            font-size: 1.1rem;
        }

    .time-calculator {
        background: linear-gradient(135deg, rgba(250, 112, 154, 0.05) 0%, rgba(254, 225, 64, 0.05) 100%);
        border-radius: 16px;
        padding: 1.5rem;
        margin-top: 1.5rem;
        border: 2px solid rgba(250, 112, 154, 0.1);
    }

    .calc-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0.75rem 0;
        border-bottom: 1px solid rgba(0, 0, 0, 0.05);
    }

        .calc-item:last-child {
            border-bottom: none;
            padding-top: 1rem;
            font-size: 1.1rem;
            font-weight: 700;
        }

    .calc-label {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #4a5568;
        font-weight: 600;
    }

        .calc-label i {
            font-size: 1.2rem;
        }

    .calc-value {
        font-size: 1.3rem;
        font-weight: 700;
        padding: 0.25rem 1rem;
        border-radius: 8px;
    }

        .calc-value.active {
            background: linear-gradient(135deg, rgba(72, 187, 120, 0.1) 0%, rgba(56, 178, 172, 0.1) 100%);
            color: #48bb78;
        }

        .calc-value.maintenance {
            background: linear-gradient(135deg, rgba(246, 173, 85, 0.1) 0%, rgba(252, 129, 129, 0.1) 100%);
            color: #f6ad55;
        }

        .calc-value.idle {
            background: linear-gradient(135deg, rgba(250, 112, 154, 0.1) 0%, rgba(254, 225, 64, 0.1) 100%);
            color: #fa709a;
        }

    .info-alert {
        background: linear-gradient(135deg, rgba(79, 172, 254, 0.1) 0%, rgba(0, 242, 254, 0.1) 100%);
        border-left: 4px solid #4facfe;
        border-radius: 8px;
        padding: 1rem;
        margin-bottom: 1.5rem;
    }

    .audit-info {
        background: linear-gradient(135deg, rgba(203, 213, 224, 0.3) 0%, rgba(160, 174, 192, 0.3) 100%);
        border-radius: 12px;
        padding: 1rem;
        margin-bottom: 1.5rem;
    }

    .audit-item {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-bottom: 0.5rem;
    }

        .audit-item:last-child {
            margin-bottom: 0;
        }

        .audit-item i {
            color: #667eea;
        }
</style>

<div class="form-container">
    <div class="form-card">
        <div class="form-header">
            <div class="form-icon">
                <i class="fas fa-edit"></i>
            </div>
            <h2>Çalışma Süresi Düzenle</h2>
            <p class="text-muted mb-0">Kayıt bilgilerini güncelleyin</p>
        </div>

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">
                <strong><i class="fas fa-exclamation-triangle me-2"></i>Lütfen aşağıdaki hataları düzeltin:</strong>
                @Html.ValidationSummary(false, "", new { @class = "mt-2 mb-0" })
            </div>
        }

        <div class="audit-info">
            <div class="audit-item">
                <i class="fas fa-user-plus"></i>
                <strong>Oluşturan:</strong> @Model.CreatedByName
            </div>
            <div class="audit-item">
                <i class="fas fa-calendar-plus"></i>
                <strong>Oluşturulma Tarihi:</strong> @Model.CreatedDate.ToString("dd.MM.yyyy HH:mm")
            </div>
            @if (Model.ModifiedBy.HasValue && Model.ModifiedDate.HasValue)
            {
                <div class="audit-item">
                    <i class="fas fa-user-edit"></i>
                    <strong>Son Güncelleyen:</strong> @Model.ModifiedByName
                </div>
                <div class="audit-item">
                    <i class="fas fa-calendar-check"></i>
                    <strong>Son Güncelleme:</strong> @Model.ModifiedDate.Value.ToString("dd.MM.yyyy HH:mm")
                </div>
            }
        </div>

        <div class="info-alert">
            <i class="fas fa-info-circle me-2"></i>
            <strong>Bilgi:</strong> Araç ve tarih değiştirilemez. Sadece çalışma süreleri ve notlar güncellenebilir.
        </div>

        @using (Html.BeginForm("Edit", "WorkingHour", FormMethod.Post, new { @class = "needs-validation", id = "editForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.WorkingHourId)
            @Html.HiddenFor(m => m.VehicleId)
            @Html.HiddenFor(m => m.RecordDate)
            @Html.HiddenFor(m => m.CreatedBy)
            @Html.HiddenFor(m => m.CreatedDate)

            <div class="row">
                <div class="col-md-6 mb-4">
                    <label class="form-label">Araç</label>
                    <div class="input-group-icon">
                        <i class="fas fa-car"></i>
                        <input type="text" class="form-control" value="@Model.VehicleName - @Model.LicensePlate" readonly>
                    </div>
                </div>

                <div class="col-md-6 mb-4">
                    <label class="form-label">Kayıt Tarihi</label>
                    <div class="input-group-icon">
                        <i class="fas fa-calendar"></i>
                        <input type="text" class="form-control" value="@Model.RecordDate.ToString("dd.MM.yyyy")" readonly>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-6 mb-4">
                    @Html.LabelFor(m => m.ActiveWorkingHours, new { @class = "form-label" })
                    <div class="input-group-icon">
                        <i class="fas fa-play-circle"></i>
                        @Html.TextBoxFor(m => m.ActiveWorkingHours,
                                 new
                                 {
                                     @class = "form-control",
                                     type = "number",
                                     step = "0.1",
                                     min = "0",
                                     max = "24",
                                     required = "required",
                                     id = "activeHours"
                                 })
                    </div>
                    @Html.ValidationMessageFor(m => m.ActiveWorkingHours, "", new { @class = "text-danger small mt-1 d-block" })
                    <small class="text-muted">Örnek: 23.5 (23 saat 30 dakika)</small>
                </div>

                <div class="col-md-6 mb-4">
                    @Html.LabelFor(m => m.MaintenanceHours, new { @class = "form-label" })
                    <div class="input-group-icon">
                        <i class="fas fa-tools"></i>
                        @Html.TextBoxFor(m => m.MaintenanceHours,
                                 new
                                 {
                                     @class = "form-control",
                                     type = "number",
                                     step = "0.1",
                                     min = "0",
                                     max = "24",
                                     required = "required",
                                     id = "maintenanceHours"
                                 })
                    </div>
                    @Html.ValidationMessageFor(m => m.MaintenanceHours, "", new { @class = "text-danger small mt-1 d-block" })
                    <small class="text-muted">Örnek: 2.5 (2 saat 30 dakika)</small>
                </div>
            </div>

            <div class="time-calculator" id="calculator">
                <h6 class="mb-3"><i class="fas fa-calculator me-2"></i>Otomatik Hesaplama</h6>

                <div class="calc-item">
                    <div class="calc-label">
                        <i class="fas fa-play-circle" style="color: #48bb78;"></i>
                        <span>Aktif Çalışma</span>
                    </div>
                    <div class="calc-value active" id="displayActive">@Model.ActiveWorkingHours.ToString("F1") saat</div>
                </div>

                <div class="calc-item">
                    <div class="calc-label">
                        <i class="fas fa-tools" style="color: #f6ad55;"></i>
                        <span>Bakım</span>
                    </div>
                    <div class="calc-value maintenance" id="displayMaintenance">@Model.MaintenanceHours.ToString("F1") saat</div>
                </div>

                <div class="calc-item">
                    <div class="calc-label">
                        <i class="fas fa-pause-circle" style="color: #fa709a;"></i>
                        <span>Boşta Bekleme</span>
                    </div>
                    <div class="calc-value idle" id="displayIdle">@Model.IdleHours.ToString("F1") saat</div>
                </div>
            </div>

            <div class="mb-4 mt-4">
                @Html.LabelFor(m => m.Notes, new { @class = "form-label" })
                <div class="input-group-icon">
                    <i class="fas fa-sticky-note" style="top: 1.5rem;"></i>
                    @Html.TextAreaFor(m => m.Notes,
                             new { @class = "form-control", rows = "3", placeholder = "Varsa notlarınızı buraya yazın..." })
                </div>
                @Html.ValidationMessageFor(m => m.Notes, "", new { @class = "text-danger small mt-1 d-block" })
            </div>

            <div class="d-flex gap-2 mt-4">
                <button type="submit" class="btn btn-warning flex-grow-1">
                    <i class="fas fa-save me-2"></i>Güncelle
                </button>
                <a href="@Url.Action("Index")" class="btn btn-secondary">
                    <i class="fas fa-times me-2"></i>İptal
                </a>
            </div>
        }
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            // Real-time calculation
            function calculateIdleHours() {
                var active = parseFloat($('#activeHours').val()) || 0;
                var maintenance = parseFloat($('#maintenanceHours').val()) || 0;
                var idle = 24 - (active + maintenance);

                // Update display
                $('#displayActive').text(active.toFixed(1) + ' saat');
                $('#displayMaintenance').text(maintenance.toFixed(1) + ' saat');
                $('#displayIdle').text(idle.toFixed(1) + ' saat');

                // Validation: Check if total exceeds 24 hours
                if (idle < 0) {
                    $('#calculator').css('border-color', '#f56565');
                    $('#displayIdle').css({
                        'background': 'rgba(245, 101, 101, 0.1)',
                        'color': '#c53030'
                    });
                } else {
                    $('#calculator').css('border-color', 'rgba(250, 112, 154, 0.1)');
                    $('#displayIdle').css({
                        'background': 'linear-gradient(135deg, rgba(250, 112, 154, 0.1) 0%, rgba(254, 225, 64, 0.1) 100%)',
                        'color': '#fa709a'
                    });
                }
            }

            // Calculate on input change
            $('#activeHours, #maintenanceHours').on('input', calculateIdleHours);

            // Initial calculation
            calculateIdleHours();

            // Form validation
            $('#editForm').submit(function (e) {
                var active = parseFloat($('#activeHours').val()) || 0;
                var maintenance = parseFloat($('#maintenanceHours').val()) || 0;

                if (active + maintenance > 24) {
                    e.preventDefault();
                    alert('Hata: Aktif çalışma ve bakım sürelerinin toplamı 24 saati geçemez!\n\nGirilen toplam: ' + (active + maintenance).toFixed(1) + ' saat');
                    return false;
                }

                if (!this.checkValidity()) {
                    e.preventDefault();
                    e.stopPropagation();
                }

                $(this).addClass('was-validated');
            });
        });
    </script>
}
